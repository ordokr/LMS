use leptos::*;

#[component]
pub fn ThemeToggle() -> impl IntoView {
    let (theme, set_theme) = create_signal("light".to_string());
    
    // Initialize theme from localStorage if available
    create_effect(move |_| {
        if let Some(window) = web_sys::window() {
            if let Ok(Some(storage)) = window.local_storage() {
                if let Ok(Some(saved_theme)) = storage.get_item("ordo-theme") {
                    set_theme.set(saved_theme);
                    
                    // Apply theme to document
                    if let Some(document) = window.document() {
                        if let Some(html) = document.document_element() {
                            let _ = html.set_attribute("data-theme", &saved_theme);
                        }
                    }
                }
            }
        }
    });
    
    // Toggle theme function
    let toggle_theme = move |_| {
        let new_theme = if theme.get() == "light" { "dark" } else { "light" };
        set_theme.set(new_theme.to_string());
        
        // Save to localStorage
        if let Some(window) = web_sys::window() {
            if let Ok(Some(storage)) = window.local_storage() {
                let _ = storage.set_item("ordo-theme", new_theme);
            }
            
            // Apply theme to document
            if let Some(document) = window.document() {
                if let Some(html) = document.document_element() {
                    let _ = html.set_attribute("data-theme", new_theme);
                }
            }
        }
    };
    
    view! {
        <button 
            class="theme-toggle"
            on:click=toggle_theme
            aria-label=move || if theme.get() == "light" { "Switch to dark mode" } else { "Switch to light mode" }
        >
            <span class="theme-toggle-icon">
                {move || if theme.get() == "light" {
                    view! {
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
                        </svg>
                    }
                } else {
                    view! {
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="4"></circle>
                            <path d="M12 2v2"></path>
                            <path d="M12 20v2"></path>
                            <path d="m4.93 4.93 1.41 1.41"></path>
                            <path d="m17.66 17.66 1.41 1.41"></path>
                            <path d="M2 12h2"></path>
                            <path d="M20 12h2"></path>
                            <path d="m6.34 17.66-1.41 1.41"></path>
                            <path d="m19.07 4.93-1.41 1.41"></path>
                        </svg>
                    }
                }}
            </span>
            <span class="theme-toggle-text">
                {move || if theme.get() == "light" { "Dark Mode" } else { "Light Mode" }}
            </span>
        </button>
    }
}
